{"version":3,"sources":["components/Forms/Form.module.css","components/Forms/Form.js","components/Todolist/Todolist.js","App.js","index.js","components/Todolist/Todolist.module.css"],"names":["module","exports","Form","state","id","name","number","association","contactId","uuid","contactIdName","contactIdNumber","handleChange","e","console","log","currentTarget","value","setState","handleSabmit","preventDefault","contactPhone","props","propOnSubmit","resetForm","onSubmit","this","className","s","m","title","htmlFor","form__name","onChange","type","pattern","required","form__number","radio__btn","checked","Component","Todolist","contactsOll","onDeleteContact","contacts__list","map","item","name__contact","btn","onClick","App","filter","hendlerSubmitForm","data","prevState","deleteContact","contact","changeFilter","getVisibleContacts","optimizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KACAA,EAAOC,QAAU,CAAC,WAAa,yBAAyB,MAAQ,sB,4KCI1DC,E,4MACJC,MAAQ,CAENC,GAAI,GACJC,KAAM,GACNC,OAAQ,GACRC,YAAa,S,EAEfC,UAAYC,c,EACZC,cAAgBD,c,EAChBE,gBAAkBF,c,EAElBG,aAAe,SAAAC,GACbC,QAAQC,IAAIF,EAAEG,cAAcC,OAC5B,MAAwBJ,EAAEG,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBb,EAAOY,IACxB,EAAKC,SAAS,CAAEd,GAAI,EAAKI,a,EAG3BW,aAAe,SAAAN,GACbA,EAAEO,iBACF,MAA0C,EAAKjB,MACzCkB,EAAe,CACnBjB,GAFF,EAAQA,GAGNC,KAHF,EAAYA,KAIVC,OAJF,EAAkBA,OAKhBC,YALF,EAA0BA,aAO1B,EAAKW,SAAS,CAAEG,iBAChB,EAAKC,MAAMC,aAAa,EAAKpB,OAE7B,EAAKqB,a,EAGPA,UAAY,WACV,EAAKN,SAAS,CAAEd,GAAI,IAAKC,KAAM,IAAKC,OAAQ,IAAKC,YAAa,O,4CAGhE,WACE,OACE,uBAAMkB,SAAUC,KAAKP,aAAcQ,UAAWC,IAAEC,EAAhD,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,uBACA,wBAAOC,QAASL,KAAKhB,cAAeiB,UAAWC,IAAEI,WAAjD,iBAEE,uBACE5B,GAAIsB,KAAKhB,cACTuB,SAAUP,KAAKd,aACfsB,KAAK,OACLjB,MAAOS,KAAKvB,MAAME,KAClBA,KAAK,OACL8B,QAAQ,yHACRL,MAAM,kcACNM,UAAQ,OAGZ,wBAAOL,QAASL,KAAKf,gBAAiBgB,UAAWC,IAAES,aAAnD,mBAEE,uBACEjC,GAAIsB,KAAKf,gBACTsB,SAAUP,KAAKd,aACfsB,KAAK,MACLjB,MAAOS,KAAKvB,MAAMG,OAClBD,KAAK,SACL8B,QAAQ,yFACRL,MAAM,giBACNM,UAAQ,OAIZ,sBAAKT,UAAWC,IAAEU,WAAlB,UACE,kCACE,uBACEJ,KAAK,QACL7B,KAAK,cACLY,MAAM,OACNgB,SAAUP,KAAKd,aACf2B,QAAoC,SAA3Bb,KAAKvB,MAAMI,cANxB,UAUA,kCACE,uBACE2B,KAAK,QACL7B,KAAK,cACLY,MAAM,SACNgB,SAAUP,KAAKd,aACf2B,QAAoC,WAA3Bb,KAAKvB,MAAMI,cANxB,YAUA,kCACE,uBACE2B,KAAK,QACL7B,KAAK,cACLY,MAAM,UACNgB,SAAUP,KAAKd,aACf2B,QAAoC,YAA3Bb,KAAKvB,MAAMI,cANxB,aAUA,kCACE,uBACE2B,KAAK,QACL7B,KAAK,cACLY,MAAM,OACNgB,SAAUP,KAAKd,aACf2B,QAAoC,SAA3Bb,KAAKvB,MAAMI,cANxB,aAWF,wBAAQ2B,KAAK,SAAb,iC,GA/GWM,aAqHJtC,I,gBC3FAuC,MAzBf,YAAqD,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,gBAC/B,OACE,oBAAIhB,UAAWC,IAAEgB,eAAjB,SACGF,EAAYG,KAAI,YAAwC,IAArCzC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACpC,OACE,qBAAaoB,UAAWC,IAAEkB,KAA1B,UACG,IACD,oBAAGnB,UAAWC,IAAEmB,cAAhB,0BACgBxC,EADhB,MAC+B,2CAAcF,EAAd,SAC7B,4CAAeC,EAAf,WAEF,yBACEqB,UAAWC,IAAEoB,IACbd,KAAK,SACLe,QAAS,kBAAMN,EAAgBvC,IAHjC,UAKG,IALH,sBANOA,SCNb8C,E,4MACJ/C,MAAQ,CACNuC,YAAa,CACX,CACEtC,GAAI,OACJC,KAAM,gBACNC,OAAQ,YACRC,YAAa,SAEf,CACEH,GAAI,OACJC,KAAM,iBACNC,OAAQ,YACRC,YAAa,SAEf,CACEH,GAAI,OACJC,KAAM,gBACNC,OAAQ,YACRC,YAAa,SAEf,CACEH,GAAI,OACJC,KAAM,iBACNC,OAAQ,YACRC,YAAa,UAGjB4C,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClBvC,QAAQC,IAAIsC,GACZ,EAAKnC,UAAS,SAAAoC,GACZ,MAAO,CAAEZ,YAAY,GAAD,mBAAMY,EAAUZ,aAAhB,CAA6BW,S,EAIrDE,cAAgB,SAAA/C,GACdM,QAAQC,IAAIP,GACZ,EAAKU,UAAS,kBAAsB,CAClCwB,YADY,EAAGA,YACUS,QAAO,SAAAK,GAAO,OAAIA,EAAQpD,KAAOI,U,EAI9DiD,aAAe,SAAA5C,GACb,EAAKK,SAAS,CAAEiC,OAAQtC,EAAEG,cAAcC,S,EAG1CyC,mBAAqB,WACnB,MAAgC,EAAKvD,MAA7BuC,EAAR,EAAQA,YACFiB,EADN,EAAqBR,OACUS,cAE/B,OAAOlB,EAAYS,QAAO,SAAAK,GAAO,OAC/BA,EAAQnD,KAAKuD,cAAcC,SAASF,O,4CAIxC,WAEE,IAAMG,EAAkBpC,KAAKgC,qBAG7B,OAFA5C,QAAQC,IAAIW,KAAKvB,MAAMuC,aAGrB,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAAMJ,aAAcG,KAAK0B,oBACzB,cAAC,EAAD,CACEV,YAAaoB,EACbnB,gBAAiBjB,KAAK6B,uB,GApEdf,aA2EHU,ICtEfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCb1BnE,EAAOC,QAAU,CAAC,eAAiB,iCAAiC,KAAO,0B","file":"static/js/main.c084d83b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__2JLfF\",\"title\":\"Form_title__1Xlpn\"};","import React from 'react';\nimport { Component } from 'react';\nimport s from './Form.module.css';\nimport { v4 as uuid } from 'uuid';\n\nclass Form extends Component {\n  state = {\n    // contacts: [],\n    id: '',\n    name: '',\n    number: '',\n    association: 'Other',\n  };\n  contactId = uuid();\n  contactIdName = uuid();\n  contactIdNumber = uuid();\n\n  handleChange = e => {\n    console.log(e.currentTarget.value);\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    this.setState({ id: this.contactId });\n  };\n\n  handleSabmit = e => {\n    e.preventDefault();\n    const { id, name, number, association } = this.state;\n    const contactPhone = {\n      id,\n      name,\n      number,\n      association,\n    };\n    this.setState({ contactPhone });\n    this.props.propOnSubmit(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ id: ' ', name: ' ', number: ' ', association: ' ' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSabmit} className={s.m}>\n        <h2 className={s.title}>Phonebook</h2>\n        <label htmlFor={this.contactIdName} className={s.form__name}>\n          Name\n          <input\n            id={this.contactIdName}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={this.contactIdNumber} className={s.form__number}>\n          Number\n          <input\n            id={this.contactIdNumber}\n            onChange={this.handleChange}\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <div className={s.radio__btn}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Work\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Work'}\n            />\n            Work\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Family\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Family'}\n            />\n            Family\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Friends\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Friends'}\n            />\n            Friends\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Last\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Last'}\n            />\n            Last\n          </label>\n        </div>\n        <button type=\"submit\">Add contacts</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import s from './Todolist.module.css';\nimport PropTypes from 'prop-types';\n// import { Form } from '../Forms/Form';\n// import { App } from '../../App';\n// import React, { Component } from 'react';\n\nfunction Todolist({ contactsOll, onDeleteContact }) {\n  return (\n    <ul className={s.contacts__list}>\n      {contactsOll.map(({ id, name, number, association }) => {\n        return (\n          <li key={id} className={s.item}>\n            {' '}\n            <p className={s.name__contact}>\n              Association: {association} | <span> name: {name} | </span>\n              <span>number: {number} |</span>\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              {' '}\n              DELETE contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\nexport default Todolist;\n\nTodolist.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import './App.css';\r\nimport { Component } from 'react';\r\nimport Form from './components/Forms/Form';\r\nimport TodoList from './components/Todolist/Todolist';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contactsOll: [\r\n      {\r\n        id: 'id-1',\r\n        name: 'Rosie Simpson',\r\n        number: '459-12-56',\r\n        association: 'Other',\r\n      },\r\n      {\r\n        id: 'id-2',\r\n        name: 'Hermione Kline',\r\n        number: '443-89-12',\r\n        association: 'Other',\r\n      },\r\n      {\r\n        id: 'id-3',\r\n        name: 'Eden Clements',\r\n        number: '645-17-79',\r\n        association: 'Other',\r\n      },\r\n      {\r\n        id: 'id-4',\r\n        name: 'Annie Copeland',\r\n        number: '227-91-26',\r\n        association: 'Other',\r\n      },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  hendlerSubmitForm = data => {\r\n    console.log(data);\r\n    this.setState(prevState => {\r\n      return { contactsOll: [...prevState.contactsOll, data] };\r\n    });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    console.log(contactId);\r\n    this.setState(({ contactsOll }) => ({\r\n      contactsOll: contactsOll.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contactsOll, filter } = this.state;\r\n    const optimizedFilter = filter.toLowerCase();\r\n\r\n    return contactsOll.filter(contact =>\r\n      contact.name.toLowerCase().includes(optimizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // const {  contactsOll } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    console.log(this.state.contactsOll);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Form propOnSubmit={this.hendlerSubmitForm} />\r\n        <TodoList\r\n          contactsOll={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// https://github.com/flamesty/goit-react-hw-02-phonebook/blob/main/src/App.js\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n// import Profile from '../src/components/profile/Profile';\r\n// import Statistics from './components/statistics/Statistics';\r\n// import statisticalData from  '../src/components/statistics/statistical-data.json';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"Todolist_contacts__list__37amF\",\"item\":\"Todolist_item__3e9s5\"};"],"sourceRoot":""}