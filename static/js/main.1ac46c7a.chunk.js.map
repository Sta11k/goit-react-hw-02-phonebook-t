{"version":3,"sources":["components/Forms/Form.js","components/Todolist/Todolist.js","App.js","index.js","components/Forms/Form.module.css"],"names":["Form","state","id","name","number","association","contactId","uuid","contactIdName","contactIdNumber","handleChange","e","console","log","currentTarget","value","setState","handleSabmit","preventDefault","contactPhone","props","propOnSubmit","resetForm","onSubmit","this","htmlFor","className","s","form__name","onChange","type","pattern","title","required","form__number","radio__btn","checked","Component","TodoList","contactsOll","contacts__list","App","hendlerSubmitForm","data","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1ac46c7a.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport s from './Form.module.css';\nimport { v4 as uuid } from 'uuid';\n\nclass Form extends Component {\n  state = {\n    // contacts: [],\n    id: '',\n    name: '',\n    number: '',\n    association: 'Other',\n  };\n  contactId = uuid();\n  contactIdName = uuid();\n  contactIdNumber = uuid();\n\n  handleChange = e => {\n    console.log(e.currentTarget.value);\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    this.setState({ id: this.contactId });\n  };\n\n  handleSabmit = e => {\n    e.preventDefault();\n    const { id, name, number, association } = this.state;\n    const contactPhone = {\n      id,\n      name,\n      number,\n      association,\n    };\n    this.setState({ contactPhone });\n    this.props.propOnSubmit(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ id: ' ', name: ' ', number: ' ', association: ' ' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSabmit}>\n        <label htmlFor={this.contactIdName} className={s.form__name}>\n          Name\n          <input\n            id={this.contactIdName}\n            onChange={this.handleChange}\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={this.contactIdNumber} className={s.form__number}>\n          Number\n          <input\n            id={this.contactIdNumber}\n            onChange={this.handleChange}\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <div className={s.radio__btn}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Work\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Work'}\n            />\n            Work\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Family\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Family'}\n            />\n            Family\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Friends\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Friends'}\n            />\n            Friends\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"association\"\n              value=\"Last\"\n              onChange={this.handleChange}\n              checked={this.state.association === 'Last'}\n            />\n            Last\n          </label>\n        </div>\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n//     {/* <input\n// type=\"text\"\n// name=\"name\"\n//  value={this.state.name}\n//  onChange={this.handleInputChange}\n// pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n// title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n// required\n// /> */}\n\n// const Add = ({ changeMessage, label }) => (\n//   <button type=\"button\" onClick={changeMessage}>\n//     {label}\n//   </button>\n// );\n\n// export class Phonebook extends Component {\n//   state = {\n//     id: null,\n//     filter: '',\n//     name: '',\n//     number: '',\n//   };\n\n//   hendleChange = e => {\n//     // console.log(e.target.name, e.target.value);\n//     const { name, value } = e.target;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   hendleSubmit = e => {\n//     e.preventDefault();\n//     const { id, name, number } = this.state;\n//     const contactsPhone = {\n//       id,\n//       name,\n//       number,\n//     };\n//     this.setState({ contactsPhone });\n//     this.props.addNewContact(contactsPhone);\n//     this.resetForm();\n//   };\n\n//   resetForm = () => {\n//     this.setState({ name: ' ', number: ' ' });\n//   };\n//   contactId = uuid();\n//   contactIdName = uuid();\n//   contactIdNumber = uuid();\n\n//   render() {\n//     console.log(this.state.name, this.state.number);\n//     const { name, number } = this.state;\n//     const { hendleSubmit, hendleChange } = this;\n//     return (\n//       <>\n//         <form onSubmit={hendleSubmit}>\n//           <h1>Phonebook</h1>\n//           <div className={s.addBlock}>\n//             <label htmlFor={this.contactIdName} className={s.name}>\n//               Name\n//               <input\n//                 id={this.contactIdName}\n//                 onChange={hendleChange}\n//                 type=\"text\"\n//                 value={name}\n//                 name=\"name\"\n//                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//                 title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//                 required\n//               />\n//             </label>\n//             <label htmlFor={this.contactIdNumber} className={s.name}>\n//               Number\n//               <input\n//                 id={this.contactIdNumber}\n//                 onChange={hendleChange}\n//                 type=\"tel\"\n//                 value={number}\n//                 name=\"number\"\n//                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                 title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//                 required\n//               />\n//             </label>\n//             <button type=\"submit\">Add</button>\n//             {/* <Add label=\"Add contacts\" changeMessage={this.updateMessage} /> */}\n//           </div>\n//         </form>\n\n//         <div className={s.search}>\n//           <h2>Contacts</h2>\n//           {/* <label className={s.name}>\n//               Find contacts by name\n//               <input\n//                 type=\"tel\"\n//                 name=\"search\"\n\n//                 title=\"Пошук контактів за ім'ям\"\n//                />\n//             </label> */}\n\n//           <ul className=\"contacts__list\"></ul>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default Phonebook;\n","import s from './Todolist.module.css';\n// import { Form } from '../Forms/Form';\nimport { App } from '../../App';\n//  import React, { Component } from 'react';\n\nfunction TodoList({ contactsOll }) {\n  // console.log( \"asdasd\",contactsOll)\n  //   this.props.renderList(contactsOll);\n  return (\n    <ul className={s.contacts__list}>\n      {/* {contactsOll.map(contact => {\n                    return (\n                        <li key={contact.id}> <p>Association{contact.association} <span>name:{contact.name}</span> <span>{ contact.number}</span></p>\n                         </li>\n                )\n            })\n            } */}\n    </ul>\n  );\n}\nexport default TodoList;\n// {/* <ul className=\"contacts__list\"></ul> */}\n","import './App.css';\nimport { Component } from 'react';\nimport Form from './components/Forms/Form';\nimport TodoList from './components/Todolist/Todolist';\n\nclass App extends Component {\n  state = {\n    contactsOll: [\n      {\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56',\n        association: 'Other',\n      },\n      {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12',\n        association: 'Other',\n      },\n      {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79',\n        association: 'Other',\n      },\n      {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26',\n        association: 'Other',\n      },\n    ],\n  };\n\n  hendlerSubmitForm = data => {\n    console.log(data);\n    this.setState(prevState => {\n      return { contactsOll: [...prevState.contactsOll, data] };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form propOnSubmit={this.hendlerSubmitForm} />\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// {/* <Phonebook addNewContact={this.addNewContact} /> */}\n// state = {\n//   filter: '',\n//   name: '',\n//   number: '',\n//   contactsOll: [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n// };\n// addNewContact = contactsObj => {\n//   this.setState(prevState => {\n//     return { contactsOll: [...prevState.contactsOll, contactsObj] };\n//   });\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n// import Profile from '../src/components/profile/Profile';\n// import Statistics from './components/statistics/Statistics';\n// import statisticalData from  '../src/components/statistics/statistical-data.json';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio__btn\":\"Form_radio__btn__kA5pH\"};"],"sourceRoot":""}